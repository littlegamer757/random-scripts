#!/bin/bash

# Installs the neccessary packages for using the dotnet-ef-tool and tries to create the database scaffold.
# Usage: dotnet-ef-init <database-file> <database context name>
# Dependencies: dotnet sdk

proj_path=$(find -name *.csproj)

if [[ -z "$proj_path" ]]; then
	echo "This script needs to be run from within a Project Folder (containing a *.csproj file)."
	echo "Usually, this script is run in a Class Library project created through your favorite C# IDE."
	exit 1
fi

dotnet tool install --global dotnet-ef --version 6.0
dotnet add package Microsoft.EntityFrameworkCore --version 6.0
dotnet add package Microsoft.EntityFrameworkCore.Design --version 6.0
dotnet add package Microsoft.EntityFrameworkCore.Tools --version 6.0
dotnet add package Microsoft.EntityFrameworkCore.SqlServer --version 6.0
dotnet add package Microsoft.EntityFrameworkCore.Sqlite --version 6.0

dbPath=$1

if [[ -z "$dbPath" ]]; then
	echo "No database given. Only the dotnet packages were installed."
	echo "To create the DbContext Scaffold, provide the database file as an argument to this script."
	exit 0
fi

ctxName=$2

if [[ -z "$ctxName" ]]; then
	echo "No context name given. Only the dotnet packages were installed."
	echo "To create the DbContext Scaffold, provide a name for the database context as an argument to this script."
	exit 0
fi

dotnet ef dbcontext scaffold "data source=$dbPath" Microsoft.EntityFrameworkCore.Sqlite -f -c "$ctxName"
